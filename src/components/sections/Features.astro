---
import Container from "../shared/Container.astro";
import Paragraph from "../shared/Paragraph.astro";
import Title from "../shared/Title.astro";
import * as THREE from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
---

<section id="features">
    <Container className="flex flex-col midmd:flex-row gap-10 lg:gap-12">
        <!-- Left Column: Image -->
        

        <!-- Right Column: Content -->
        <div class="flex-1 flex midmd:w-7/12 lg:w-1/2 flex-col">
            <Title>
                We Lead Powerful Projects On Moroccan Blockchain Innovation
            </Title>
            <Paragraph className="mt-8">
                At <strong>BlockReg Solutions</strong>, we offer cutting-edge features to empower your blockchain projects.
                <br>
                Harness the power of decentralized technology with our comprehensive suite of tools and services.
            </Paragraph>
            <Paragraph className="mt-2">
                Our solutions are designed to streamline development, enhance security, and ensure compliance, so you can focus on innovation.
            </Paragraph>
            <ul class="mt-8 space-y-6 text-heading-3 font-medium">
                <li class="flex items-center">
                    <span class="font-bold bg-blue-500 rounded-full w-10 h-10 mr-4 text-white inline-flex justify-center items-center">
                        <!-- Smart Contract Icon -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 17v-1a4 4 0 00-3-3.874V9a4 4 0 00-4-4H7a4 4 0 00-4 4v7a4 4 0 004 4h6a4 4 0 004-4z" />
                        </svg>
                    </span> 
                    Smart Contract Development
                </li>
                <li class="flex items-center ">
                    <span class="font-bold bg-green-500 rounded-full w-10 h-10 mr-4 text-white inline-flex justify-center items-center ">
                        <!-- Security Shield Icon -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 12l8-4.5-8-4.5-8 4.5 8 4.5zm0 0v8.25M12 20.25l8-4.5m-8 4.5l-8-4.5" />
                        </svg>
                    </span> 
                    Enhanced Security Protocols
                </li>
                <li class="flex items-center">
                    <span class="font-bold bg-purple-500 rounded-full w-10 h-10 mr-4 text-white inline-flex justify-center items-center">
                        <!-- Compliance Icon -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 14l2 2 4-4M7 10a5 5 0 0110 0v7a2 2 0 01-2 2H9a2 2 0 01-2-2v-7z" />
                        </svg>
                    </span> 
                    Regulatory Compliance Tools
                </li>
                <li class="flex items-center">
                    <span class="font-bold bg-indigo-500 rounded-full w-10 h-10 mr-4 text-white inline-flex justify-center items-center">
                        <!-- Analytics Icon -->
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-5l-2 2m7-2l2 2v5M5 12l2-2 4 4 4-4 4 4" />
                        </svg>
                    </span> 
                    Blockchain Analytics
                </li>
            </ul>
        </div>
        <div class="max-w-md mx-auto midmd:max-w-none lg:mx-0 lg:pr-10 xl:pr-2 flex-1 flex w-11/12 midmd:w-5/12 lg:w-1/2 midmd:h-auto">
            <div class="w-full h-80 sm:h-96 midmd:h-full relative">
                <!-- Updated decorative elements -->
                <div class="absolute rotate-45 -left-5 md:-left-10 lg:-left-20 xl:-left-24 p-1 top-1/2 w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-500 blur-3xl opacity-50 animate-pulse"></div>
                <div class="absolute p-1 -top-4 md:-top-10 right-0 w-20 h-20 bg-gradient-to-br from-green-500 to-teal-500 rounded-full blur-3xl opacity-60 animate-pulse"></div>
                
                <span class="absolute w-full aspect-[16/5] -skew-x-12 rounded-full bg-gradient-to-tr from-indigo-500 to-blue-500 opacity-40 blur-2xl left-0 bottom-0"></span>
                <!-- Updated image -->
                <img src={"/logos/1860bb04-d248-44d7-9f48-0e8cee4b9dc1.webp"} alt="Blockchain features illustration" 
                width="1240" height="1385"
                class="w-auto left-1/2 -translate-x-1/2 absolute bottom-0 max-h-full" />
                <div id="coin-pile-hover" class="w-full "></div>
            </div>
        </div>
    </Container>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r79/three.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            
      const scene = new THREE.Scene();
      scene.background = new THREE.Color(0x000000);
    
      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
      camera.position.z = 5;
    
      const renderer = new THREE.WebGLRenderer({ antialias: true });
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.getElementById('coin-pile-hover').appendChild(renderer.domElement);
    
      const controls = new OrbitControls(camera, renderer.domElement);
      controls.enableDamping = true;
    
      const coinGeometry = new THREE.CylinderGeometry(0.5, 0.5, 0.1, 32);
      const coinMaterial = new THREE.MeshStandardMaterial({
        color: 0x888888,
        metalness: 0.8,
        roughness: 0.3,
      });
    
      const numCoins = 50;
      const coins = new THREE.InstancedMesh(coinGeometry, coinMaterial, numCoins);
    
      for (let i = 0; i < numCoins; i++) {
        const matrix = new THREE.Matrix4();
        const position = new THREE.Vector3((Math.random() - 0.5) * 3, (Math.random() - 0.5) * 1.5, (Math.random() - 0.5) * 3);
        const rotation = new THREE.Euler(Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI);
        matrix.compose(position, new THREE.Quaternion().setFromEuler(rotation), new THREE.Vector3(1, 1, 1));
        coins.setMatrixAt(i, matrix);
      }
      scene.add(coins);
    
      const light = new THREE.DirectionalLight(0xffffff, 0.6);
      light.position.set(5, 5, 5);
      scene.add(light);
    
      let mouseX = 0;
      let mouseY = 0;
      document.addEventListener('mousemove', (event) => {
        mouseX = (event.clientX / window.innerWidth) * 2 - 1;
        mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
      });
    
      function animate() {
        requestAnimationFrame(animate);
    
        for (let i = 0; i < numCoins; i++) {
          const matrix = new THREE.Matrix4();
          coins.getMatrixAt(i, matrix);
    
          const position = new THREE.Vector3();
          const rotation = new THREE.Quaternion();
          const scale = new THREE.Vector3();
          matrix.decompose(position, rotation, scale);
    
          const euler = new THREE.Euler(
            Math.sin(mouseY * Math.PI) * 0.05,
            Math.sin(mouseX * Math.PI) * 0.05,
            rotation.z
          );
          rotation.setFromEuler(euler);
          matrix.compose(position, rotation, scale);
          coins.setMatrixAt(i, matrix);
        }
        coins.instanceMatrix.needsUpdate = true;
    
        controls.update();
        renderer.render(scene, camera);
      }
      animate();
    });
    </script>

</section>
